name: Codex Fixer

on:
  push:
    branches: [ main ]
  workflow_dispatch:        # allow manual run
  schedule:
    - cron: "0 2 * * *"     # run daily at 2 AM UTC

jobs:
  fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps
        run: npm install --ignore-scripts

      - name: Run ESLint
        run: npx eslint . --ext .js,.ts || true

      - name: Format code with Prettier
        run: npx prettier --write "**/*.{js,ts,json,yml,yaml,md}"

      - name: Fix vulnerabilities
        run: npm audit fix || true

      - name: Regenerate lockfiles if needed
        run: |
          for dir in sms-activate tech-god-bug root-index; do
            if [ -f "$dir/package.json" ]; then
              cd $dir
              rm -f package-lock.json
              npm install --package-lock-only
              cd ..
            fi
          done

      - name: Commit fixes back
        run: |
          git config --global user.email "codex-bot@users.noreply.github.com"
          git config --global user.name "Codex Fixer Bot"
          git add .
          git commit -m "Codex auto-fixes: lint/format/deps" || echo "No changes"
          git push origin main || true

      - name: Create version tag
        run: |
          count=$(git tag -l "codex-v*" | wc -l)
          new=$((count + 1))
          tag="codex-v$new"

          git config --global user.email "codex-bot@users.noreply.github.com"
          git config --global user.name "Codex Fixer Bot"

          git tag $tag
          git push origin $tag

      - name: Write version to file
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "$latest_tag" > VERSION.txt

          git config --global user.email "codex-bot@users.noreply.github.com"
          git config --global user.name "Codex Fixer Bot"

          git add VERSION.txt
          git commit -m "Codex update: set version $latest_tag" || echo "No changes"
          git push origin main || true

